# beam dynamics oriented parameters

record(ao, "$(PREFIX):beam:orbit:eps")
{
	# Required as pydev_ao currently seems not to
	# use val during pini
	field(DESC, "Closed orbit: eps")
	field(EGU, "m??")
	field(VAL,  1e-7)
	field(PREC, 12)
	field(PINI, "YES")
	field(TPRO, 0)
	field(OUT, "$(PREFIX):beam:orbit:im:eps PP")
	# field(FLNK, "$(PREFIX):beam:orbit:im:eps")
}


record(ao, "$(PREFIX):beam:orbit:im:eps")
{
	field(DESC, "Closed orbit: eps")
	field(EGU, "m??")
	field(DTYP, "pydev")
	field(PREC, 12)
	field(OUT, "@update(element_id='dt_manager', property='do_background_calculations', value=%VAL%)")
	field(TPRO, 0)
}

record(bi, "$(PREFIX):beam:orbit:found")
{
	field(DESC, "Closed orbit: fixed point found?")
	field(ZNAM, "particle lost")
	field(ONAM, "found")

	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:orbit:found')")
	field(SCAN, "I/O Intr")

	field(VAL, 0)
	field(TPRO, 1)
	field(PINI, "YES")

}

record(ai, "$(PREFIX):beam:orbit:calc_time")
{
	field(DESC, "Closed orbit: calculation time?")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:orbit:calc_time')")
	field(SCAN, "I/O Intr")
	field(VAL, 0)
	field(PREC, 3)
	# field(TPRO, 1)
	field(PINI, "YES")

}

record(ai, "$(PREFIX):beam:twiss:calc_time")
{
	field(DESC, "Twiss: calcultion time?")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:twiss:calc_time')")
	field(SCAN, "I/O Intr")
	field(VAL, 0)
	field(PREC, 3)
	# field(TPRO, 1)
	field(PINI, "YES")

}

record(waveform, "$(PREFIX):beam:orbit:fixed_point")
{
	field(DESC, "Closed orbit: fixed point")
	field(EGU, "mm / mrad")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:orbit:fixed_point')")
	field(SCAN, "I/O Intr")
	field(FTVL, "DOUBLE")
	field(PREC, 12)
	field(NELM, 6)
	# field(TPRO, 1)
}

record(waveform, "$(PREFIX):beam:orbit:x")
{
	field(DESC, "Closed orbit: x")
	field(EGU, "m??")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:orbit:x')")
	field(SCAN, "I/O Intr")
	field(PREC, 6)
	field(NELM, 2048)
	field(FTVL, "DOUBLE")
	# field(TPRO, 1)
}

record(waveform, "$(PREFIX):beam:orbit:y")
{
	field(DESC, "closed orbit: y")
	field(EGU, "m??")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:orbit:y')")
	field(SCAN, "I/O Intr")
	field(FTVL, "DOUBLE")
	field(NELM, 2048)
	# field(TPRO, 1)
}


record(waveform, "$(PREFIX):beam:alpha:x")
{
	field(DESC, "Twiss alpha: x")
	field(EGU, "m??")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:alpha:x')")
	field(SCAN, "I/O Intr")
	field(PREC, 6)
	field(NELM, 2048)
	field(FTVL, "DOUBLE")
	# field(TPRO, 1)
}

record(waveform, "$(PREFIX):beam:alpha:y")
{
	field(DESC, "Twiss alpha: y")
	field(EGU, "m??")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:alpha:y')")
	field(SCAN, "I/O Intr")
	field(FTVL, "DOUBLE")
	field(NELM, 2048)
	# field(TPRO, 1)
}

record(waveform, "$(PREFIX):beam:beta:x")
{
	field(DESC, "Twiss beta: x")
	field(EGU, "m")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:beta:x')")
	field(SCAN, "I/O Intr")
	field(FTVL, "DOUBLE")
	field(NELM, 2048)
	# field(TPRO, 1)
}

record(waveform, "$(PREFIX):beam:beta:y")
{
	field(DESC, "Twiss beta: y")
	field(EGU, "m??")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:beta:y')")
	field(SCAN, "I/O Intr")
	field(NELM, 2048)
	field(FTVL, "DOUBLE")
	# field(TPRO, 1)
}

record(waveform, "$(PREFIX):beam:nu:x")
{
	field(DESC, "Twiss nu: x (Floquet coordinate)")
	field(EGU, "rad")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:nu:x')")
	field(SCAN, "I/O Intr")
	field(FTVL, "DOUBLE")
	field(NELM, 2048)
	# field(TPRO, 1)
}

record(waveform, "$(PREFIX):beam:nu:y")
{
	field(DESC, "Twiss nu: y (Floquet coordinate)")
	field(EGU, "rad")
	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:nu:y')")
	field(SCAN, "I/O Intr")
	field(NELM, 2048)
	field(FTVL, "DOUBLE")
	# field(TPRO, 1)
}


record(waveform, "$(PREFIX):beam:names")
{
	field(DESC, "Beam: element names")
 	field(DTYP, "pydev")
	field(INP,  "@pydev.iointr('$(PREFIX):beam:names')")
	field(SCAN, "I/O Intr")
	field(NELM, 2048)
	field(FTVL, "STRING")
	field(TPRO, 1)
}

record(longout, "$(PREFIX):beam:publish")
{
     field(DESC, "Publish lattice")
     field(DTYP, "pydev")
     # todo: make latttice publsihable
     #:      what did that mean?
     field(OUT, "@publish(what='lattice')")
     #field(OUT, "@print('How should I publish the lattice?')")
     field(VAL, -1)
     field(PINI, "YES")
     field(TPRO, 1)

}

record(ai, "$(PREFIX):beam:working_point:x")
{
     field(DESC, "Beam: Q x")
     field(EGU, "")
     field(DTYP, "pydev")
     field(INP,  "@pydev.iointr('$(PREFIX):beam:working_point:x')")
     field(SCAN, "I/O Intr")
     field(VAL, 0)
     field(FLNK, "$(PREFIX):beam:working_point:frac_x")
}

record(ai, "$(PREFIX):beam:working_point:y")
{
    field(DESC, "Beam: Q y")
    field(EGU, "")
    field(DTYP, "pydev")
    field(INP,  "@pydev.iointr('$(PREFIX):beam:working_point:y')")
    field(SCAN, "I/O Intr")
    field(VAL, 0)
    field(FLNK, "$(PREFIX):beam:working_point:frac_y")
}

record(calc, "$(PREFIX):beam:working_point:frac_x")
{
    field(DESC, "Beam: Q x (fractional part)")
    field(INPA, "$(PREFIX):beam:working_point:x")
    field(CALC, "A - floor(A)")
    # that's more like bunch by bunch feed back frequency ?
    # field(CALC, "B:= A - floor(A); B < 0.5 ? B : 1 - B")
    field(PREC, "6")
    field(TPRO, 1)
    field(FLNK, "$(PREFIX):TUNEZR:rdH")
}

record(calc, "$(PREFIX):beam:working_point:frac_y")
{
    field(DESC, "Beam: Q x (fractional part)")
    field(INPA, "$(PREFIX):beam:working_point:y")
    field(CALC, "A - floor(A)")
    # that's more like bunch by bunch feed back frequency ?
    # field(CALC, "B:= A - floor(A); B < 0.5 ? B : 1 - B")
    field(PREC, "6")
    field(TPRO, 1)
    field(FLNK, "$(PREFIX):TUNEZR:rdV")
}

record(longout, "$(PREFIX):beam:nbunches")
{
     field(DESC, "number of bunches in the machine")
     field(VAL, 400)
     field(PINI, "YES")
     field(FLNK, "$(PREFIX):beam:revolution_freq")
}

record(calc, "$(PREFIX):beam:revolution_freq")
{
     field(DESC, "Revolution frequency of the machine")
     field(EGU,  "kHz")
     field(INPA, "$(PREFIX):beam:nbunches")
     field(INPB, "$(PREFIX):master_clock:freq")
     field(CALC, "B / A")
     field(FLNK, "$(PREFIX):beam:revolution_freq:fanout")

}

record(fanout, "$(PREFIX):beam:revolution_freq:fanout")
{
    field(DESC, "inform that revolution frequncy changed")
    field(LNK1, "$(PREFIX):TUNEZR:rdH")
    field(LNK2, "$(PREFIX):TUNEZR:rdV")
}