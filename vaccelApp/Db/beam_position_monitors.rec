record(waveform, "$(PREFIX):beam:bpm:dx")
{
    field(DESC, "BPM: dx")
    field(EGU, "m")
    field(DTYP, "pydev")
    field(INP,  "@pydev.iointr('$(PREFIX):beam:bpm:dx')")
    field(SCAN, "I/O Intr")
    field(NELM, 2048)
    field(FTVL, "DOUBLE")
    field(TPRO, 1)
}

record(waveform, "$(PREFIX):beam:bpm:dy")
{
    field(DESC, "BPM: dy")
    field(EGU, "m")
    field(DTYP, "pydev")
    field(INP,  "@pydev.iointr('$(PREFIX):beam:bpm:dy')")
    field(SCAN, "I/O Intr")
    field(NELM, 2048)
    field(FTVL, "DOUBLE")
    field(TPRO, 1)

}

record(waveform, "$(PREFIX):beam:bpm:names")
{
    field(DESC, "BPM: element names")
    field(DTYP, "pydev")
    field(INP,  "@pydev.iointr('$(PREFIX):beam:bpm:names')")
    field(SCAN, "I/O Intr")
    field(NELM, 2048)
    field(FTVL, "STRING")
    field(TPRO, 1)
}

record(waveform, "$(PREFIX):beam:bpm:bdata")
{
    field(DESC, "BPM packed data")
    field(DTYP, "pydev")
    field(NELM, 2048)
    field(NORD, 128)
    # So that hopefully further processing works ...
    # in bluesky scripts
    # Warning: need to get label
    field(INP,  "@pydev.iointr('$(PREFIX):beam:bpm:bdata')")
    field(SCAN, "I/O Intr")
    field(FTVL, "DOUBLE")
    field(PREC, 5)
    field(TPRO, 1)
    field(FLNK, "$(PREFIX):bpm:bdata:count")

}

# A counter to use as feedback that new beam position data are available
record(calc, "$(PREFIX):bpm:bdata:count")
{

    field(INPA, "$(PREFIX):bpm:bdata:count")
    field(VAL, 0)
    field(CALC, "A+1")
    field(TPRO, 0)
    field(PINI, "YES")
}

# Ensure that bpm data are only periodically updated if
# no calculation is pending ...
# here out is used to inform a record if new data are
# there. The ":cnt" record will then use the forward link
#
record(calcout, "$(PREFIX):bpm:im:bdata:trigger")
{
    field(DESC, "BPM packed data: trigger update")
    #
    # field(INPA, 0)
    field(VAL, 0)
    field(CALC, "VAL + 1")
    field(DOPT, "Use OCAL")
    field(INPA, "$(PREFIX):dt:calc:orbit:roe PP")
    field(OCAL, "A")
    field(OUT, "$(PREFIX):bpm:im:bdata:trigger:pass PP")
    field(PINI, "YES")
    field(TPRO, 0)
    # field(OOPT, "When Zero")
    field(OOPT, "Every Time")
    field(SCAN, ".5 second")
    # field(SCAN, "2 second")
}


# Wanted to implement it as a counter ... failed
record(bi, "$(PREFIX):bpm:im:bdata:trigger:pass")
{
   field(DESC, "BPM packed data: trigger pass")
   field(INP, "$(PREFIX):bpm:im:bdata:trigger")
   field(ZNAM, "active")
   field(ONAM, "inactive")
   field(VAL, 1)
   field(PINI, "YES")
   field(FLNK, "$(PREFIX):MDIZ2T5G:bdata")

}

record(waveform, "$(PREFIX):MDIZ2T5G:bdata")
{
    field(DESC, "BPM packed data:  periodically updated")
    field(INP, "$(PREFIX):beam:bpm:bdata")
    field(NELM, 2048)
    # So that hopefully further processing works ...
    # in bluesky scripts
    field(PINI, "YES")
    field(TPRO, 0)
    field(FTVL, "DOUBLE")
    field(FLNK, "$(PREFIX):MDIZ2T5G:count")

}

record(bo, "$(PREFIX):MDIZ2T5G:ready")
{
	field(VAL, 0)
	field(ZNAM, "ready")
	field(ONAM, "busy")
	field(PINI, "YES")
}

record(calc, "$(PREFIX):MDIZ2T5G:count")
{

	field(INPA, "$(PREFIX):MDIZ2T5G:count")
	field(VAL, 0)
	field(CALC, "A+1")
	field(TPRO, 0)
	field(PINI, "YES")
}


record(ai, "$(PREFIX):BPMZR:avgH")
{
	field(DESC, "Providing empty value for stats")
	field(VAL, 0)
	field(PINI, "YES")
}

record(ai, "$(PREFIX):BPMZR:avgV")
{
	field(DESC, "Providing empty value for stats")
	field(VAL, 0)
	field(PINI, "YES")
}

record(ai, "$(PREFIX):BPMZR:rmsH")
{
	field(DESC, "Providing empty value for stats")
	field(VAL, 0)
	field(PINI, "YES")
}


record(ai, "$(PREFIX):BPMZR:rmsV")
{
	field(DESC, "Providing empty value for stats")
	field(VAL, 0)
	field(PINI, "YES")
}
